@model IEnumerable<ConstructionNew.Models.ApplicationUser>

@{
	ViewBag.Title = "Suspended User List";
	var t = TempData["shortMessage"];
}



<table class="table">
	<tr>
		<th>
			@Html.DisplayNameFor(model => model.UserName)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.FName)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.LName)
		</th>

		<th>
			@Html.DisplayNameFor(model => model.WorkType)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.UserRole)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Suspended)
		</th>
	</tr>

	@foreach (var item in Model)
	{
		if (item.Suspended == true)
		{
		<tr>
			<td>
				@Html.DisplayFor(modelItem => item.UserName)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.FName)

			</td>
			<td>
				@Html.DisplayFor(model => item.LName)
			</td>
			<td>
				@using (Html.BeginForm("EditWork", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
				{
					@Html.Hidden("Id", item.Id)
					@Html.DropDownList("workType", new SelectList(ConstructionNew.Extensions.WorkTypeMethods.GetWorkTypeDescription()), ConstructionNew.Extensions.EnumExtensions.GetDescription(item.WorkType))
					<input type="submit" value="Submit" onclick="return confirm('Click ok to change category')" />
				}
			</td>
			<td>
				@using (Html.BeginForm("EditRole", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
				{
					@Html.Hidden("Id", item.Id)
					@Html.DropDownList("UserRole", new List<SelectListItem>
					{
						new SelectListItem { Text = "Admin", Value = "Admin"},
						new SelectListItem { Text = "Manager", Value = "Manager"},
						new SelectListItem { Text = "Employee", Value = "Employee"}
					}, item.UserRole)
					<input type="submit" value="Submit" onclick="return confirm('Click Ok to change role')" />}
			</td>
			<td>
				<!--Creates form for Suspend user and ties it to the "Suspend" method in the "AccountController" -->
				@using (Html.BeginForm("Suspend", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
				{
					@Html.Hidden("Id", item.Id)
					<!--Creates checkbox for Suspend and binds it to the model attribute "Suspended"-->

					@Html.CheckBoxFor(model => item.Suspended, new { Name = "suspended" })
					{
						<input type="submit" value="Submit" onclick="return confirm('Click Ok to confirm suspension')" />}
				}
			</td>
			<td>@Html.ActionLink("Delete User", "Delete", new { id = item.Id }, new { onclick = "return confirm('Press Ok to delete');" })</td>
		</tr>
		}
	}

</table>

@*@{
		WebGrid wbgrid = new WebGrid(source: Model);
		@wbgrid.GetHtml(
						tableStyle:"table",
						columns:new[]
						{
							wbgrid.Column("UserName", "User Name"),
							wbgrid.Column("FName", "First Name"),
							wbgrid.Column("LName", "Last Name"),
							wbgrid.Column("WorkType", "Work Type"),
							wbgrid.Column("UserRole", "User Role"),
							wbgrid.Column(header:"Delete", format: @<text>@Html.ActionLink("X", "Delete", new { id = item.Id}, new { onclick="return confirm('Are you sure you want to delete User "+item.UserName+"?');"})</text>),
							wbgrid.Column(header:"Update Role", format:@item => Html.DropDownList("UserRole", ViewBag.userrole as SelectList)),
							wbgrid.Column(header: "Update", format:@<text>@Html.ActionLink("Update", "EditRole", new { id = item.Id}, new { onclick="return confirm('Are you sure you want to update User Role for "+item.UserName+"?');"  } )</text>)
						 })
	}*@

@if (t != null)
{
	<script type="text/javascript">
        window.onload = function () {
            alert("@ViewData["shortMessage"] This user is on the schedule, therefore cannot be deleted.")
        };

	</script>
}


