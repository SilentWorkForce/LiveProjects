@using Microsoft.AspNet.Identity
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "" }))
    {
        @Html.AntiForgeryToken()

<ul class="nav navbar-nav navbar-right">
    @*This will only show the chat link in the navbar if a user is logged in.*@
    <!--enter dashboard link in href-->
    <!--Only one link will show at a time based on the media queries.  If the screen is > 768 px the chat shows, else the mobile chat shows-->

    @* [li > a] or [navbar > a] is styled quite a bit already, but [li > button] is not. *@
    @* To match the current stylings, this button is wrapped *illegally* in an empty anchor tag. *@
    <li id="chat"><a id="chatLink"><button id="chatButton" type="button" onclick="openChat()">CHAT</button></a></li>

    <li>@Html.ActionLink("Mobile Chat", "MobileChat", "ChatMessages", null, new { @id = "mobileChatLink" })</li>

    <li>
        @Html.ActionLink("Hello " + User.Identity.GetUserName() + "!", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage", Style = "color: White;" })
    </li>
    <li id="logoff"><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
</ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        @* commented out the following 'CHANGE PASSWORD' link during a navbar adjustment *@
        @*<li>@Html.ActionLink("CHANGE PASSWORD", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>*@
        <li>@Html.ActionLink("Register", "CheckCode", "Account", routeValues: null, htmlAttributes: new { id = "registerLink", Style = "color: White; font-size: 1.2em;" })</li>
        <li>@Html.ActionLink("Log In", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink", Style = "color: White; font-size: 1.2em;" })</li>
    </ul>
}
